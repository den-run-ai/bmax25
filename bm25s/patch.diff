diff --git a/bm25s/numba/retrieve_utils.py b/bm25s/numba/retrieve_utils.py
index c7fee7e..6d005b9 100644
--- a/bm25s/numba/retrieve_utils.py
+++ b/bm25s/numba/retrieve_utils.py
@@ -7,6 +7,7 @@ import logging
 from .. import utils
 from ..scoring import _compute_relevance_from_scores_jit_ready
 from .selection import _numba_sorted_top_k
+import time
 
 _compute_relevance_from_scores_jit_ready = njit()(_compute_relevance_from_scores_jit_ready)
 
@@ -32,16 +33,26 @@ def _retrieve_internal_jitted_parallel(
 
     for i in prange(N):
         query_tokens_single = query_tokens_ids_flat[query_pointers[i] : query_pointers[i + 1]]
+        print("query_tokens_ids", query_tokens_single)
+        print("data", data)
+        print("indptr", indptr)
+        print("indices", indices)
+        print("num_docs", num_docs)
+        print("dtype", dtype)
 
         # query_tokens_single = np.asarray(query_tokens_single, dtype=int_dtype)
-        scores_single = _compute_relevance_from_scores_jit_ready(
-            query_tokens_ids=query_tokens_single,
-            data=data,
-            indptr=indptr,
-            indices=indices,
-            num_docs=num_docs,
-            dtype=dtype,
-        )
+        #for zxc in prange(1000000): #0.09257340431213379
+        #for zxc in prange(100000000):
+        for zxc in prange(100000000):
+            scores_single = _compute_relevance_from_scores_jit_ready(
+                query_tokens_ids=query_tokens_single,
+                data=data,
+                indptr=indptr,
+                indices=indices,
+                num_docs=num_docs,
+                dtype=dtype,
+            )
+        print("scores_single", scores_single)
 
         # if there's a non-occurrence array, we need to add the non-occurrence score
         # back to the scores
@@ -51,7 +62,6 @@ def _retrieve_internal_jitted_parallel(
 
         if weight_mask is not None:
             scores_single = scores_single * weight_mask
-        
         topk_scores_sing, topk_indices_sing = _numba_sorted_top_k(
             scores_single, k=k, sorted=sorted
         )
diff --git a/examples/retrieve_nq.py b/examples/retrieve_nq.py
index 191f174..a003257 100644
--- a/examples/retrieve_nq.py
+++ b/examples/retrieve_nq.py
@@ -31,7 +31,8 @@ import Stemmer
 from tqdm import tqdm
 
 
-def main(index_dir="bm25s_indices", data_dir="datasets", dataset="nq", split="test", mmap=True):
+#def main(index_dir="bm25s_indices", data_dir="datasets", dataset="nq", split="test", mmap=True):
+def main(index_dir="bm25s_indices", data_dir="datasets", dataset="msmarco", split="test", mmap=True):
     index_dir = Path(index_dir) / dataset
     
     if mmap:
